// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace Repository.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Kategoriler");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2022, 4, 20, 12, 34, 21, 605, DateTimeKind.Local).AddTicks(5657),
                            Name = "Category1"
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2022, 4, 20, 12, 34, 21, 605, DateTimeKind.Local).AddTicks(6045),
                            Name = "Category2"
                        });
                });

            modelBuilder.Entity("Core.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Ürünler");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2022, 4, 20, 12, 34, 21, 607, DateTimeKind.Local).AddTicks(2435),
                            Name = "Product1",
                            Price = 100m,
                            Stock = 10
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2022, 4, 20, 12, 34, 21, 607, DateTimeKind.Local).AddTicks(3194),
                            Name = "Product2",
                            Price = 200m,
                            Stock = 20
                        },
                        new
                        {
                            ID = 3,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2022, 4, 20, 12, 34, 21, 607, DateTimeKind.Local).AddTicks(3205),
                            Name = "Product3",
                            Price = 300m,
                            Stock = 30
                        },
                        new
                        {
                            ID = 4,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2022, 4, 20, 12, 34, 21, 607, DateTimeKind.Local).AddTicks(3214),
                            Name = "Product4",
                            Price = 400m,
                            Stock = 40
                        },
                        new
                        {
                            ID = 5,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2022, 4, 20, 12, 34, 21, 607, DateTimeKind.Local).AddTicks(3269),
                            Name = "Product5",
                            Price = 500m,
                            Stock = 50
                        },
                        new
                        {
                            ID = 6,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2022, 4, 20, 12, 34, 21, 607, DateTimeKind.Local).AddTicks(3282),
                            Name = "Product6",
                            Price = 600m,
                            Stock = 60
                        },
                        new
                        {
                            ID = 7,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2022, 4, 20, 12, 34, 21, 607, DateTimeKind.Local).AddTicks(3291),
                            Name = "Product7",
                            Price = 700m,
                            Stock = 70
                        },
                        new
                        {
                            ID = 8,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2022, 4, 20, 12, 34, 21, 607, DateTimeKind.Local).AddTicks(3300),
                            Name = "Product8",
                            Price = 800m,
                            Stock = 80
                        },
                        new
                        {
                            ID = 9,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2022, 4, 20, 12, 34, 21, 607, DateTimeKind.Local).AddTicks(3308),
                            Name = "Product9",
                            Price = 900m,
                            Stock = 90
                        });
                });

            modelBuilder.Entity("Core.ProductFeature", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Width")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFicir");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Color = "mavi",
                            ProductId = 1
                        },
                        new
                        {
                            ID = 2,
                            Color = "kırmızı",
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("Core.Product", b =>
                {
                    b.HasOne("Core.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Core.ProductFeature", b =>
                {
                    b.HasOne("Core.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("Core.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Core.Product", b =>
                {
                    b.Navigation("ProductFeature");
                });
#pragma warning restore 612, 618
        }
    }
}
